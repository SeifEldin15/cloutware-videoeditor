name: Deploy to Server

# Trigger the workflow on push to main branch
on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check SSH Secrets
      run: |
        if [ -z "${{ secrets.SSH_USERNAME }}" ] || [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "❌ SSH secrets are not configured!"
          echo ""
          echo "Please add these secrets to your GitHub repository:"
          echo "1. Go to Settings → Secrets and variables → Actions"
          echo "2. Add these secrets:"
          echo "   - SSH_USERNAME: Your server username (e.g., ubuntu)"
          echo "   - SSH_PRIVATE_KEY: Your SSH private key content"
          echo "   - SSH_PORT: 22 (optional)"
          echo ""
          echo "📚 See SIMPLE-CI-CD-GUIDE.md for detailed instructions"
          exit 1
        fi
        echo "✅ SSH secrets are configured"
      
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 18.144.88.135
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || '22' }}
        timeout: 120s
        command_timeout: 15m
        script_stop: true
        script: |
          echo "🚀 Starting simple deployment..."
          
          # Set deployment directory
          DEPLOY_DIR="$HOME/cloutware-videoeditor"
          REPO_URL="https://github.com/SeifEldin15/cloutware-videoeditor.git"
          
          # Navigate to home and clean up if exists
          cd $HOME
          rm -rf cloutware-videoeditor
          
          # Clone repository
          echo "📥 Cloning repository..."
          git clone $REPO_URL
          cd cloutware-videoeditor
          
          # Install dependencies and build
          echo "📦 Installing dependencies..."
          npm install
          
          echo "🔨 Building application..."
          npm run build
          
          # Stop existing PM2 process
          echo "🛑 Stopping existing processes..."
          pm2 stop video-processing || true
          pm2 delete video-processing || true
          
          # Start application
          echo "🚀 Starting application..."
          pm2 start npm --name "video-processing" -- start
          
          # Show status
          echo "📊 PM2 Status:"
          pm2 status
          
          echo "✅ Deployment completed!"
          echo "🌐 Application running on http://18.144.88.135:3000"